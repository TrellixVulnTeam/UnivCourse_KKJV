using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace 服务器
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            try
            {
                Socket socketWatch = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
                IPAddress ip = IPAddress.Any;
                IPEndPoint point = new IPEndPoint(ip, Convert.ToInt32(textBox2.Text));
                socketWatch.Bind(point);
                socketWatch.Listen(10);
                ShowMsg("监听成功");

                Thread th = new Thread(Listen);
                th.IsBackground = true;
                th.Start(socketWatch);
            }
            catch { }
        }

        /// <summary>
        /// 创建监听
        /// </summary>
        /// <param name="obj"></param>
        Dictionary<string, Socket> dic = new Dictionary<string, Socket>();
        void Listen(object obj) 
        {
            Socket socketWatch = obj as Socket;
            while (true)
            {
                try
                {
                    Socket socketSend = socketWatch.Accept();
                    ShowMsg(socketSend.RemoteEndPoint + " : 连接成功");
                    dic.Add(socketSend.RemoteEndPoint.ToString(), socketSend);
                    comboBox1.Items.Add(socketSend.RemoteEndPoint.ToString());
                    Thread th = new Thread(Receive);
                    th.IsBackground = true;
                    th.Start(socketSend);
                }
                catch { }
            }
           
            
        }
        /// <summary>
        /// 接收数据
        /// </summary>
        /// <param name="obj"></param>
        /// 
        Socket socketSend;
        void Receive(object obj) 
        {
            socketSend = obj as Socket;
            while (true)
            {
                try
                {
                    byte[] buffer = new byte[1024 * 1024 * 2];
                    int r = socketSend.Receive(buffer);
                    if (r == 0)
                    {
                        break;
                    }
                    string str = Encoding.UTF8.GetString(buffer, 0, r);
                    ShowMsg(str);
                }
                catch { }
            }  
        }

        private void ShowMsg(string str) 
        {
            textBox3.AppendText(str + "\r\n");
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            Control.CheckForIllegalCrossThreadCalls = false;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            string str = textBox4.Text;
            byte[] buffer = Encoding.UTF8.GetBytes(str);
            //socketSend.Send(buffer);
            dic[comboBox1.SelectedItem.ToString()].Send(buffer);
        }
    }
}
