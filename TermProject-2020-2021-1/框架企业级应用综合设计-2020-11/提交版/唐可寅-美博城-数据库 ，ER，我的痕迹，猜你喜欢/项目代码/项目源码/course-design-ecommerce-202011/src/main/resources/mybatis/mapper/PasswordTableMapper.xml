<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.hbut.pro.design.system.ecommerce.b202011.group.kevin.mapper.PasswordTableMapper">
    <resultMap id="BaseResultMap"
               type="cn.edu.hbut.pro.design.system.ecommerce.b202011.group.kevin.domain.PasswordTable">
        <!--@mbg.generated-->
        <!--@Table CourseDesign202011.passwordTable-->
        <id column="passId" jdbcType="INTEGER" property="passId"/>
        <result column="original" jdbcType="VARCHAR" property="original"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
               type="cn.edu.hbut.pro.design.system.ecommerce.b202011.group.kevin.domain.PasswordTable">
        <!--@mbg.generated-->
        <!--@Table CourseDesign202011.passwordTable-->
        <result column="encryption" jdbcType="LONGVARCHAR" property="encryption"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        passId, original
    </sql>
    <sql id="Blob_Column_List">
        <!--@mbg.generated-->
        encryption
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from CourseDesign202011.passwordTable
        where passId = #{passId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from CourseDesign202011.passwordTable
        where passId = #{passId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="passId" keyProperty="passId"
            parameterType="cn.edu.hbut.pro.design.system.ecommerce.b202011.group.kevin.domain.PasswordTable"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into CourseDesign202011.passwordTable (original, encryption)
        values (#{original,jdbcType=VARCHAR}, #{encryption,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="passId" keyProperty="passId"
            parameterType="cn.edu.hbut.pro.design.system.ecommerce.b202011.group.kevin.domain.PasswordTable"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into CourseDesign202011.passwordTable
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="original != null">
                original,
            </if>
            <if test="encryption != null">
                encryption,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="original != null">
                #{original,jdbcType=VARCHAR},
            </if>
            <if test="encryption != null">
                #{encryption,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="cn.edu.hbut.pro.design.system.ecommerce.b202011.group.kevin.domain.PasswordTable">
        <!--@mbg.generated-->
        update CourseDesign202011.passwordTable
        <set>
            <if test="original != null">
                original = #{original,jdbcType=VARCHAR},
            </if>
            <if test="encryption != null">
                encryption = #{encryption,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where passId = #{passId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs"
            parameterType="cn.edu.hbut.pro.design.system.ecommerce.b202011.group.kevin.domain.PasswordTable">
        <!--@mbg.generated-->
        update CourseDesign202011.passwordTable
        set original = #{original,jdbcType=VARCHAR},
        encryption = #{encryption,jdbcType=LONGVARCHAR}
        where passId = #{passId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="cn.edu.hbut.pro.design.system.ecommerce.b202011.group.kevin.domain.PasswordTable">
        <!--@mbg.generated-->
        update CourseDesign202011.passwordTable
        set original = #{original,jdbcType=VARCHAR}
        where passId = #{passId,jdbcType=INTEGER}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update CourseDesign202011.passwordTable
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="original = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when passId = #{item.passId,jdbcType=INTEGER} then #{item.original,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="encryption = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when passId = #{item.passId,jdbcType=INTEGER} then #{item.encryption,jdbcType=LONGVARCHAR}
                </foreach>
            </trim>
        </trim>
        where passId in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.passId,jdbcType=INTEGER}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update CourseDesign202011.passwordTable
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="original = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.original != null">
                        when passId = #{item.passId,jdbcType=INTEGER} then #{item.original,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="encryption = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.encryption != null">
                        when passId = #{item.passId,jdbcType=INTEGER} then #{item.encryption,jdbcType=LONGVARCHAR}
                    </if>
                </foreach>
            </trim>
        </trim>
        where passId in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.passId,jdbcType=INTEGER}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="passId" keyProperty="passId" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into CourseDesign202011.passwordTable
        (original, encryption)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.original,jdbcType=VARCHAR}, #{item.encryption,jdbcType=LONGVARCHAR})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="passId" keyProperty="passId"
            parameterType="cn.edu.hbut.pro.design.system.ecommerce.b202011.group.kevin.domain.PasswordTable"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into CourseDesign202011.passwordTable
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="passId != null">
                passId,
            </if>
            original,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="passId != null">
                #{passId,jdbcType=INTEGER},
            </if>
            #{original,jdbcType=VARCHAR},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="passId != null">
                passId = #{passId,jdbcType=INTEGER},
            </if>
            original = #{original,jdbcType=VARCHAR},
        </trim>
    </insert>
    <insert id="insertOrUpdateWithBLOBs" keyColumn="passId" keyProperty="passId"
            parameterType="cn.edu.hbut.pro.design.system.ecommerce.b202011.group.kevin.domain.PasswordTable"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into CourseDesign202011.passwordTable
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="passId != null">
                passId,
            </if>
            original,
            encryption,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="passId != null">
                #{passId,jdbcType=INTEGER},
            </if>
            #{original,jdbcType=VARCHAR},
            #{encryption,jdbcType=LONGVARCHAR},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="passId != null">
                passId = #{passId,jdbcType=INTEGER},
            </if>
            original = #{original,jdbcType=VARCHAR},
            encryption = #{encryption,jdbcType=LONGVARCHAR},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="passId" keyProperty="passId"
            parameterType="cn.edu.hbut.pro.design.system.ecommerce.b202011.group.kevin.domain.PasswordTable"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into CourseDesign202011.passwordTable
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="passId != null">
                passId,
            </if>
            <if test="original != null">
                original,
            </if>
            <if test="encryption != null">
                encryption,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="passId != null">
                #{passId,jdbcType=INTEGER},
            </if>
            <if test="original != null">
                #{original,jdbcType=VARCHAR},
            </if>
            <if test="encryption != null">
                #{encryption,jdbcType=LONGVARCHAR},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="passId != null">
                passId = #{passId,jdbcType=INTEGER},
            </if>
            <if test="original != null">
                original = #{original,jdbcType=VARCHAR},
            </if>
            <if test="encryption != null">
                encryption = #{encryption,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
</mapper>